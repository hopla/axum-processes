
                   Protocol for IPC with the address server.


Each message ("command") consists of an uppercase command name followed by a JSON
object representing the arguments and ends with a single newline character (\n).


Formats:
  - A MambaNet address is formatted as a string of 8 hexadecimal digits
  - A UniqueMediaAccessID is formatted as "MMMM:PPPP:UUUU", where M=ManufacturerID,
    P=ProductID and U=UniqueIDPerProduct. Each represented in 4 hexadecimal digits.


Client->Server (requests)
  GET {}
    Fetch a list of nodes from the database. The following JSON fields are handled:
      limit   Maximum number of nodes to return, default 1, max. 50
      offset  Node number to start with, default 0
      order   Field name to order by, optionally followed by ' DESC' for reverse order
    Additionally, the following fields can be used to filter on the list:
      Name, MambaNetAddr, UniqueID, Services, Parent, Active, EngineAddr
    This command will be replied to with a NODES response.

  SETNAME {}
    Set the name of a node. The database will be updated immediately, and the actual
    node will be updated as soon as it is online. JSON arguments:
      MambaNetAddr  The address of the node to change the name of, as known in the DB
      Name          The new name of the node.

  SETENGINE {}
    Set the engine of a node. JSON arguments:
      MambaNetAddr  The address of the node to change the default engine address of
      EngineAddr    The address of the engine to use

  PING {}
    Send a broadcast ping request. This will make sure that all nodes on the network
    are detected as being online in the database.

  REFRESH {}
    Whenever the name or hardware parent of a node changes without involving the address
    server, synchronisation issues can occur. This command will re-fetch the name and
    hardware parent of the nodes matched by the JSON argument. The same matching rules
    apply as with the GET command, minus the limit, offset and order fields.

  REMOVE {}
    Remove a MambaNet address from the database, so it can be re-assigned later for
    another node. This command should only be used if you are absolutely sure that the
    node for which the address is reserved won't be attached to the network again, or
    that when it does, its previous address doesn't have to be restored.

  REASSIGN {}
    Give a MambaNet node a different address and remove the reservation for the node
    that previously had that address. JSON arguments:
      old   The current MambaNet address of the node that should use the new address,
            this address will become available for other nodes after a successful reassign
      new   The new address to use. If this address is already reserved for an other
            node in the database, this reservation will be removed.

  NOTIFY {}
    Enable or disable notifications. The JSON argument 'enable' is an array of actions
    that the application wishes to receive, and 'disable' an array of actions that should
    be disabled. By default, all actions are disabled and no notifications will be sent.
    Currently the only valid action is 'RELEASED'. Example to enable this action:
      NOTIFY {"enable":["RELEASED"]}


Server->Client (responses)
  NODES {}
    Reply to a GET command. The returned nodes are available in the 'result' JSON field
    as a list of objects with the following fields:
      Name, MambaNetAddr, UniqueID, Services, Parent, Active, EngineAddr

  OK {}
    Reply to a successfull SETNAME, SETENGINE, PING, REFRESH, REMOVE, REASSIGN or NOTIFY
    command. JSON argument is currently left empty, but might in the future be used for
    additional information.

  ERROR {}
    This reply indicates that something went wrong. An error message is supplied in
    the 'msg' JSON field.

  RELEASED {}
    Sent when a MambaNet address that was previously reserved for one node has been removed
    from the database, and can thus be re-assigned for other nodes. Any application that
    links node-specific data to addresses should consider this data to be invalid after
    receiving this action. The address that has been released is available in the MambaNetAddr
    JSON field.

