-- On an empty PostgreSQL installation, execute the following to
-- create and load the DB for use with the axum software:
--
--  $ createuser -U postgres -S -D -R axum
--  $ createdb -U postgres axum -O axum
--  $ psql -U axum <schema.sql
--  $ psql -U axum <db_to_position.sql
--  $ psql -U axum <defaults.sql
--  $ psql -U axum <functions.sql
--  $ psql -U axum <triggers.sql
--  $ psql -U axum <util.sql


-- General TODO list (not too important)
--  - Operator classes for the custom types
--  - More sanity checking (NULL values on custom types)
--  - Foreign key: node_config(func) -> functions(func)
--  - more triggers


CREATE LANGUAGE plpgsql;



-- T Y P E S

CREATE TYPE function_number AS (
  type integer,
  seq integer,
  func integer
);

CREATE TYPE mambanet_data AS (
  int integer,
  fl float,
  bits bit varying(64),
  str varchar(64)
);

CREATE TYPE mambanet_minmax AS (
  int integer,
  fl float
);

CREATE TYPE mambanet_unique_id AS (
  man smallint,
  prod smallint,
  id smallint
);




-- T A B L E S

CREATE TABLE node_config (
  addr integer NOT NULL,
  object integer NOT NULL,
  func function_number NOT NULL,
  firm_major smallint DEFAULT 0 NOT NULL,
  label character varying(16),
  user_level0 boolean,
  user_level1 boolean,
  user_level2 boolean,
  user_level3 boolean,
  user_level4 boolean,
  user_level5 boolean
  PRIMARY KEY (addr, object, firm_major);
);

CREATE TABLE defaults (
  addr integer NOT NULL,
  object integer NOT NULL,
  data mambanet_data NOT NULL,
  firm_major smallint DEFAULT 0 NOT NULL
  PRIMARY KEY (addr, object, firm_major);
);

CREATE TABLE templates (
  man_id smallint NOT NULL,
  prod_id smallint NOT NULL,
  firm_major smallint NOT NULL,
  number integer NOT NULL,
  description character varying(32) NOT NULL,
  services smallint NOT NULL,
  sensor_type smallint NOT NULL,
  sensor_size smallint,
  sensor_min mambanet_minmax,
  sensor_max mambanet_minmax,
  actuator_type smallint NOT NULL,
  actuator_size smallint,
  actuator_min mambanet_minmax,
  actuator_max mambanet_minmax,
  actuator_def mambanet_minmax,
  CONSTRAINT templates_actuator_size_check CHECK (((actuator_size >= 0) AND (actuator_size <= 64))),
  CONSTRAINT templates_actuator_type_check CHECK (((actuator_type >= 0) AND (actuator_type <= 6))),
  CONSTRAINT templates_sensor_size_check CHECK (((sensor_size >= 0) AND (sensor_size <= 64))),
  CONSTRAINT templates_sensor_type_check CHECK (((sensor_type >= 0) AND (sensor_type <= 6))),
  CONSTRAINT templates_services_check CHECK (((services >= 0) AND (services <= 3)))
  PRIMARY KEY (man_id, prod_id, firm_major, number);
);

CREATE TABLE functions (
  func function_number NOT NULL,
  name character varying(64) NOT NULL,
  rcv_type smallint NOT NULL,
  xmt_type smallint NOT NULL,
  pos smallint DEFAULT 9999 NOT NULL,
  label character varying(16) DEFAULT 'No label'::character varying NOT NULL,
  user_level0 boolean DEFAULT false NOT NULL,
  user_level1 boolean DEFAULT false NOT NULL,
  user_level2 boolean DEFAULT true NOT NULL,
  user_level3 boolean DEFAULT true NOT NULL,
  user_level4 boolean DEFAULT true NOT NULL,
  user_level5 boolean DEFAULT true NOT NULL,
  CONSTRAINT functions_rcv_type_check CHECK (((rcv_type >= 0) AND (rcv_type <= 6))),
  CONSTRAINT functions_xmt_type_check CHECK (((xmt_type >= 0) AND (xmt_type <= 6)))
);
CREATE UNIQUE INDEX functions_unique ON functions USING btree (rcv_type, xmt_type, ((func).type), ((func).seq), ((func).func));

CREATE TABLE addresses (
  addr integer NOT NULL PRIMARY KEY,
  name character varying(32),
  id mambanet_unique_id NOT NULL,
  engine_addr integer NOT NULL,
  services smallint NOT NULL,
  active boolean DEFAULT false NOT NULL,
  parent mambanet_unique_id DEFAULT ROW((0)::smallint, (0)::smallint, (0)::smallint) NOT NULL,
  setname boolean DEFAULT false NOT NULL,
  refresh boolean DEFAULT false NOT NULL,
  firstseen timestamp without time zone DEFAULT now() NOT NULL,
  lastseen timestamp without time zone DEFAULT now() NOT NULL,
  addr_requests integer DEFAULT 0 NOT NULL,
  firm_major smallint,
  user_level_from_console smallint DEFAULT 0 NOT NULL,
  CONSTRAINT addresses_user_level_from_console_check CHECK (((user_level_from_console >= 0) AND (user_level_from_console <= 4)))
);
CREATE UNIQUE INDEX addresses_unique_id ON addresses USING btree (((id).man), ((id).prod), ((id).id));

CREATE TABLE recent_changes (
  change character varying(32) NOT NULL,
  arguments character varying(64) NOT NULL,
  "timestamp" timestamp without time zone DEFAULT now() NOT NULL,
  pid integer DEFAULT pg_backend_pid() NOT NULL
);

CREATE TABLE slot_config (
  slot_nr smallint NOT NULL PRIMARY KEY,
  addr integer NOT NULL,
  input_ch_cnt integer,
  output_ch_cnt integer,
  CONSTRAINT slot_config_slot_nr_check CHECK (((slot_nr >= 1) AND (slot_nr <= 42)))
);

CREATE TABLE src_config (
  pos smallint DEFAULT 9999 NOT NULL,
  number smallint NOT NULL PRIMARY KEY,
  label character varying(32) NOT NULL,
  input1_addr integer,
  input1_sub_ch smallint NOT NULL,
  input2_addr integer,
  input2_sub_ch smallint NOT NULL,
  input_phantom boolean DEFAULT false NOT NULL,
  input_pad boolean DEFAULT false NOT NULL,
  input_gain float DEFAULT 30 NOT NULL,
  redlight1 boolean DEFAULT false NOT NULL,
  redlight2 boolean DEFAULT false NOT NULL,
  redlight3 boolean DEFAULT false NOT NULL,
  redlight4 boolean DEFAULT false NOT NULL,
  redlight5 boolean DEFAULT false NOT NULL,
  redlight6 boolean DEFAULT false NOT NULL,
  redlight7 boolean DEFAULT false NOT NULL,
  redlight8 boolean DEFAULT false NOT NULL,
  monitormute1 boolean DEFAULT false NOT NULL,
  monitormute2 boolean DEFAULT false NOT NULL,
  monitormute3 boolean DEFAULT false NOT NULL,
  monitormute4 boolean DEFAULT false NOT NULL,
  monitormute5 boolean DEFAULT false NOT NULL,
  monitormute6 boolean DEFAULT false NOT NULL,
  monitormute7 boolean DEFAULT false NOT NULL,
  monitormute8 boolean DEFAULT false NOT NULL,
  monitormute9 boolean DEFAULT false NOT NULL,
  monitormute10 boolean DEFAULT false NOT NULL,
  monitormute11 boolean DEFAULT false NOT NULL,
  monitormute12 boolean DEFAULT false NOT NULL,
  monitormute13 boolean DEFAULT false NOT NULL,
  monitormute14 boolean DEFAULT false NOT NULL,
  monitormute15 boolean DEFAULT false NOT NULL,
  monitormute16 boolean DEFAULT false NOT NULL,
  default_src_preset smallint,
  start_trigger smallint DEFAULT 0 NOT NULL,
  stop_trigger smallint DEFAULT 0 NOT NULL,
  pool1 boolean DEFAULT true NOT NULL,
  pool2 boolean DEFAULT true NOT NULL,
  pool3 boolean DEFAULT true NOT NULL,
  pool4 boolean DEFAULT true NOT NULL,
  pool5 boolean DEFAULT true NOT NULL,
  pool6 boolean DEFAULT true NOT NULL,
  pool7 boolean DEFAULT true NOT NULL,
  pool8 boolean DEFAULT true NOT NULL,
  related_dest integer,
  CONSTRAINT src_config_default_src_preset_check CHECK (((default_src_preset >= 1) AND (default_src_preset <= 1280))),
  CONSTRAINT src_config_input1_sub_ch_check1 CHECK (((input1_sub_ch >= 0) AND (input1_sub_ch <= 32))),
  CONSTRAINT src_config_input2_sub_ch_check1 CHECK (((input2_sub_ch >= 0) AND (input2_sub_ch <= 32))),
  CONSTRAINT src_config_number_check1 CHECK (((number >= 1) AND (number <= 1280))),
  CONSTRAINT src_config_start_trigger_check CHECK (((start_trigger >= 0) AND (start_trigger <= 3))),
  CONSTRAINT src_config_stop_trigger_check CHECK (((stop_trigger >= 0) AND (stop_trigger <= 3)))
);

CREATE TABLE module_config (
  number smallint NOT NULL PRIMARY KEY,
  source_a smallint DEFAULT 0 NOT NULL,
  source_b smallint DEFAULT 0 NOT NULL,
  insert_source smallint DEFAULT 0 NOT NULL,
  insert_on_off boolean DEFAULT false NOT NULL,
  gain float DEFAULT 0 NOT NULL,
  lc_frequency smallint DEFAULT 120 NOT NULL,
  lc_on_off boolean DEFAULT false NOT NULL,
  eq_band_1_range smallint DEFAULT 18 NOT NULL,
  eq_band_1_freq smallint DEFAULT 12000 NOT NULL,
  eq_band_1_bw float DEFAULT 1 NOT NULL,
  eq_band_1_slope float DEFAULT 1 NOT NULL,
  eq_band_1_type smallint DEFAULT 4 NOT NULL,
  eq_band_2_range smallint DEFAULT 18 NOT NULL,
  eq_band_2_freq smallint DEFAULT 4000 NOT NULL,
  eq_band_2_bw float DEFAULT 1 NOT NULL,
  eq_band_2_slope float DEFAULT 1 NOT NULL,
  eq_band_2_type smallint DEFAULT 3 NOT NULL,
  eq_band_3_range smallint DEFAULT 18 NOT NULL,
  eq_band_3_freq smallint DEFAULT 800 NOT NULL,
  eq_band_3_bw float DEFAULT 1 NOT NULL,
  eq_band_3_slope float DEFAULT 1 NOT NULL,
  eq_band_3_type smallint DEFAULT 2 NOT NULL,
  eq_band_4_range smallint DEFAULT 18 NOT NULL,
  eq_band_4_freq smallint DEFAULT 120 NOT NULL,
  eq_band_4_bw float DEFAULT 1 NOT NULL,
  eq_band_4_slope float DEFAULT 1 NOT NULL,
  eq_band_4_type smallint DEFAULT 1 NOT NULL,
  eq_band_5_range smallint DEFAULT 18 NOT NULL,
  eq_band_5_freq smallint DEFAULT 12000 NOT NULL,
  eq_band_5_bw float DEFAULT 1 NOT NULL,
  eq_band_5_slope float DEFAULT 1 NOT NULL,
  eq_band_5_type smallint DEFAULT 5 NOT NULL,
  eq_band_6_range smallint DEFAULT 18 NOT NULL,
  eq_band_6_freq smallint DEFAULT 120 NOT NULL,
  eq_band_6_bw float DEFAULT 1 NOT NULL,
  eq_band_6_slope float DEFAULT 1 NOT NULL,
  eq_band_6_type smallint DEFAULT 0 NOT NULL,
  eq_on_off boolean DEFAULT false NOT NULL,
  dyn_on_off boolean DEFAULT false NOT NULL,
  mod_level float DEFAULT (-140) NOT NULL,
  mod_on_off boolean DEFAULT false NOT NULL,
  source_c smallint DEFAULT 0 NOT NULL,
  source_d smallint DEFAULT 0 NOT NULL,
  buss_1_2_assignment boolean DEFAULT true NOT NULL,
  buss_3_4_assignment boolean DEFAULT true NOT NULL,
  buss_5_6_assignment boolean DEFAULT true NOT NULL,
  buss_7_8_assignment boolean DEFAULT true NOT NULL,
  buss_9_10_assignment boolean DEFAULT true NOT NULL,
  buss_11_12_assignment boolean DEFAULT true NOT NULL,
  buss_13_14_assignment boolean DEFAULT true NOT NULL,
  buss_15_16_assignment boolean DEFAULT true NOT NULL,
  buss_17_18_assignment boolean DEFAULT true NOT NULL,
  buss_19_20_assignment boolean DEFAULT true NOT NULL,
  buss_21_22_assignment boolean DEFAULT true NOT NULL,
  buss_23_24_assignment boolean DEFAULT true NOT NULL,
  buss_25_26_assignment boolean DEFAULT true NOT NULL,
  buss_27_28_assignment boolean DEFAULT true NOT NULL,
  buss_29_30_assignment boolean DEFAULT true NOT NULL,
  buss_31_32_assignment boolean DEFAULT true NOT NULL,
  eq_band_1_level float DEFAULT 0 NOT NULL,
  eq_band_2_level float DEFAULT 0 NOT NULL,
  eq_band_3_level float DEFAULT 0 NOT NULL,
  eq_band_4_level float DEFAULT 0 NOT NULL,
  eq_band_5_level float DEFAULT 0 NOT NULL,
  eq_band_6_level float DEFAULT 0 NOT NULL,
  phase smallint DEFAULT 3 NOT NULL,
  phase_on_off boolean DEFAULT false NOT NULL,
  mono smallint DEFAULT 3 NOT NULL,
  mono_on_off boolean DEFAULT false NOT NULL,
  console smallint DEFAULT 1 NOT NULL,
  source_e smallint DEFAULT 0 NOT NULL,
  source_f smallint DEFAULT 0 NOT NULL,
  source_g smallint DEFAULT 0 NOT NULL,
  source_h smallint DEFAULT 0 NOT NULL,
  source_a_preset smallint,
  source_b_preset smallint,
  source_c_preset smallint,
  source_d_preset smallint,
  source_e_preset smallint,
  source_f_preset smallint,
  source_g_preset smallint,
  source_h_preset smallint,
  overrule_active boolean DEFAULT false NOT NULL,
  d_exp_threshold float DEFAULT (-30) NOT NULL,
  agc_threshold float DEFAULT (-20) NOT NULL,
  mod_pan smallint DEFAULT 512 NOT NULL,
  buss_1_2_level float DEFAULT 0 NOT NULL,
  buss_1_2_on_off boolean DEFAULT true NOT NULL,
  buss_1_2_pre_post boolean DEFAULT false NOT NULL,
  buss_1_2_balance smallint DEFAULT 512 NOT NULL,
  buss_3_4_level float DEFAULT 0 NOT NULL,
  buss_3_4_on_off boolean DEFAULT true NOT NULL,
  buss_3_4_pre_post boolean DEFAULT false NOT NULL,
  buss_3_4_balance smallint DEFAULT 512 NOT NULL,
  buss_5_6_level float DEFAULT 0 NOT NULL,
  buss_5_6_on_off boolean DEFAULT true NOT NULL,
  buss_5_6_pre_post boolean DEFAULT false NOT NULL,
  buss_5_6_balance smallint DEFAULT 512 NOT NULL,
  buss_7_8_level float DEFAULT 0 NOT NULL,
  buss_7_8_on_off boolean DEFAULT true NOT NULL,
  buss_7_8_pre_post boolean DEFAULT false NOT NULL,
  buss_7_8_balance smallint DEFAULT 512 NOT NULL,
  buss_9_10_level float DEFAULT 0 NOT NULL,
  buss_9_10_on_off boolean DEFAULT true NOT NULL,
  buss_9_10_pre_post boolean DEFAULT false NOT NULL,
  buss_9_10_balance smallint DEFAULT 512 NOT NULL,
  buss_11_12_level float DEFAULT 0 NOT NULL,
  buss_11_12_on_off boolean DEFAULT true NOT NULL,
  buss_11_12_pre_post boolean DEFAULT false NOT NULL,
  buss_11_12_balance smallint DEFAULT 512 NOT NULL,
  buss_13_14_level float DEFAULT 0 NOT NULL,
  buss_13_14_on_off boolean DEFAULT true NOT NULL,
  buss_13_14_pre_post boolean DEFAULT false NOT NULL,
  buss_13_14_balance smallint DEFAULT 512 NOT NULL,
  buss_15_16_level float DEFAULT 0 NOT NULL,
  buss_15_16_on_off boolean DEFAULT true NOT NULL,
  buss_15_16_pre_post boolean DEFAULT false NOT NULL,
  buss_15_16_balance smallint DEFAULT 512 NOT NULL,
  buss_17_18_level float DEFAULT 0 NOT NULL,
  buss_17_18_on_off boolean DEFAULT true NOT NULL,
  buss_17_18_pre_post boolean DEFAULT false NOT NULL,
  buss_17_18_balance smallint DEFAULT 512 NOT NULL,
  buss_19_20_level float DEFAULT 0 NOT NULL,
  buss_19_20_on_off boolean DEFAULT true NOT NULL,
  buss_19_20_pre_post boolean DEFAULT false NOT NULL,
  buss_19_20_balance smallint DEFAULT 512 NOT NULL,
  buss_21_22_level float DEFAULT 0 NOT NULL,
  buss_21_22_on_off boolean DEFAULT true NOT NULL,
  buss_21_22_pre_post boolean DEFAULT false NOT NULL,
  buss_21_22_balance smallint DEFAULT 512 NOT NULL,
  buss_23_24_level float DEFAULT 0 NOT NULL,
  buss_23_24_on_off boolean DEFAULT true NOT NULL,
  buss_23_24_pre_post boolean DEFAULT false NOT NULL,
  buss_23_24_balance smallint DEFAULT 512 NOT NULL,
  buss_25_26_level float DEFAULT 0 NOT NULL,
  buss_25_26_on_off boolean DEFAULT true NOT NULL,
  buss_25_26_pre_post boolean DEFAULT false NOT NULL,
  buss_25_26_balance smallint DEFAULT 512 NOT NULL,
  buss_27_28_level float DEFAULT 0 NOT NULL,
  buss_27_28_on_off boolean DEFAULT true NOT NULL,
  buss_27_28_pre_post boolean DEFAULT false NOT NULL,
  buss_27_28_balance smallint DEFAULT 512 NOT NULL,
  buss_29_30_level float DEFAULT 0 NOT NULL,
  buss_29_30_on_off boolean DEFAULT true NOT NULL,
  buss_29_30_pre_post boolean DEFAULT false NOT NULL,
  buss_29_30_balance smallint DEFAULT 512 NOT NULL,
  buss_31_32_level float DEFAULT 0 NOT NULL,
  buss_31_32_on_off boolean DEFAULT true NOT NULL,
  buss_31_32_pre_post boolean DEFAULT false NOT NULL,
  buss_31_32_balance smallint DEFAULT 512 NOT NULL,
  use_insert_preset boolean DEFAULT false NOT NULL,
  use_gain_preset boolean DEFAULT false NOT NULL,
  use_lc_preset boolean DEFAULT false NOT NULL,
  use_phase_preset boolean DEFAULT false NOT NULL,
  use_mono_preset boolean DEFAULT false NOT NULL,
  use_eq_preset boolean DEFAULT false NOT NULL,
  use_dyn_preset boolean DEFAULT false NOT NULL,
  use_mod_preset boolean DEFAULT false NOT NULL,
  buss_1_2_use_preset boolean DEFAULT false NOT NULL,
  buss_3_4_use_preset boolean DEFAULT false NOT NULL,
  buss_5_6_use_preset boolean DEFAULT false NOT NULL,
  buss_7_8_use_preset boolean DEFAULT false NOT NULL,
  buss_9_10_use_preset boolean DEFAULT false NOT NULL,
  buss_11_12_use_preset boolean DEFAULT false NOT NULL,
  buss_13_14_use_preset boolean DEFAULT false NOT NULL,
  buss_15_16_use_preset boolean DEFAULT false NOT NULL,
  buss_17_18_use_preset boolean DEFAULT false NOT NULL,
  buss_19_20_use_preset boolean DEFAULT false NOT NULL,
  buss_21_22_use_preset boolean DEFAULT false NOT NULL,
  buss_23_24_use_preset boolean DEFAULT false NOT NULL,
  buss_25_26_use_preset boolean DEFAULT false NOT NULL,
  buss_27_28_use_preset boolean DEFAULT false NOT NULL,
  buss_29_30_use_preset boolean DEFAULT false NOT NULL,
  buss_31_32_use_preset boolean DEFAULT false NOT NULL,
  agc_ratio float DEFAULT 1,
  CONSTRAINT module_config_agc_ratio_check CHECK (((agc_ratio >= (1)::float) AND (agc_ratio <= (25)::float))),
  CONSTRAINT module_config_agc_threshold_check CHECK (((agc_threshold >= ((-30))::float) AND (agc_threshold <= (0)::float))),
  CONSTRAINT module_config_check CHECK (((eq_band_1_level >= ((- eq_band_1_range))::float) AND (eq_band_1_level <= (eq_band_1_range)::float))),
  CONSTRAINT module_config_check1 CHECK (((eq_band_2_level >= ((- eq_band_2_range))::float) AND (eq_band_2_level <= (eq_band_2_range)::float))),
  CONSTRAINT module_config_check2 CHECK (((eq_band_3_level >= ((- eq_band_3_range))::float) AND (eq_band_3_level <= (eq_band_3_range)::float))),
  CONSTRAINT module_config_check3 CHECK (((eq_band_4_level >= ((- eq_band_4_range))::float) AND (eq_band_4_level <= (eq_band_4_range)::float))),
  CONSTRAINT module_config_check4 CHECK (((eq_band_5_level >= ((- eq_band_5_range))::float) AND (eq_band_5_level <= (eq_band_5_range)::float))),
  CONSTRAINT module_config_check5 CHECK (((eq_band_6_level >= ((- eq_band_6_range))::float) AND (eq_band_6_level <= (eq_band_6_range)::float))),
  CONSTRAINT module_config_console_check CHECK (((console >= 1) AND (console <= 4))),
  CONSTRAINT module_config_d_exp_threshold_check CHECK (((d_exp_threshold >= ((-50))::float) AND (d_exp_threshold <= (0)::float))),
  CONSTRAINT module_config_eq_band_1_bw_check CHECK (((eq_band_1_bw >= (0.1)::float) AND (eq_band_1_bw <= (10)::float))),
  CONSTRAINT module_config_eq_band_1_freq_check CHECK (((eq_band_1_freq >= 10) AND (eq_band_1_freq <= 20000))),
  CONSTRAINT module_config_eq_band_1_range_check CHECK (((eq_band_1_range >= (-18)) AND (eq_band_1_range <= 18))),
  CONSTRAINT module_config_eq_band_1_slope_check CHECK (((eq_band_1_slope >= (0.1)::float) AND (eq_band_1_slope <= (10)::float))),
  CONSTRAINT module_config_eq_band_1_type_check CHECK (((eq_band_1_type >= 0) AND (eq_band_1_type <= 7))),
  CONSTRAINT module_config_eq_band_2_bw_check CHECK (((eq_band_2_bw >= (0.1)::float) AND (eq_band_2_bw <= (10)::float))),
  CONSTRAINT module_config_eq_band_2_freq_check CHECK (((eq_band_2_freq >= 10) AND (eq_band_2_freq <= 20000))),
  CONSTRAINT module_config_eq_band_2_range_check CHECK (((eq_band_2_range >= (-18)) AND (eq_band_2_range <= 18))),
  CONSTRAINT module_config_eq_band_2_slope_check CHECK (((eq_band_2_slope >= (0.1)::float) AND (eq_band_2_slope <= (10)::float))),
  CONSTRAINT module_config_eq_band_2_type_check CHECK (((eq_band_2_type >= 0) AND (eq_band_2_type <= 7))),
  CONSTRAINT module_config_eq_band_3_bw_check CHECK (((eq_band_3_bw >= (0.1)::float) AND (eq_band_3_bw <= (10)::float))),
  CONSTRAINT module_config_eq_band_3_freq_check CHECK (((eq_band_3_freq >= 10) AND (eq_band_3_freq <= 20000))),
  CONSTRAINT module_config_eq_band_3_range_check CHECK (((eq_band_3_range >= (-18)) AND (eq_band_3_range <= 18))),
  CONSTRAINT module_config_eq_band_3_slope_check CHECK (((eq_band_3_slope >= (0.1)::float) AND (eq_band_3_slope <= (10)::float))),
  CONSTRAINT module_config_eq_band_3_type_check CHECK (((eq_band_3_type >= 0) AND (eq_band_3_type <= 7))),
  CONSTRAINT module_config_eq_band_4_bw_check CHECK (((eq_band_4_bw >= (0.1)::float) AND (eq_band_4_bw <= (10)::float))),
  CONSTRAINT module_config_eq_band_4_freq_check CHECK (((eq_band_4_freq >= 10) AND (eq_band_4_freq <= 20000))),
  CONSTRAINT module_config_eq_band_4_range_check CHECK (((eq_band_4_range >= (-18)) AND (eq_band_4_range <= 18))),
  CONSTRAINT module_config_eq_band_4_slope_check CHECK (((eq_band_4_slope >= (0.1)::float) AND (eq_band_4_slope <= (10)::float))),
  CONSTRAINT module_config_eq_band_4_type_check CHECK (((eq_band_4_type >= 0) AND (eq_band_4_type <= 7))),
  CONSTRAINT module_config_eq_band_5_bw_check CHECK (((eq_band_5_bw >= (0.1)::float) AND (eq_band_5_bw <= (10)::float))),
  CONSTRAINT module_config_eq_band_5_freq_check CHECK (((eq_band_5_freq >= 10) AND (eq_band_5_freq <= 20000))),
  CONSTRAINT module_config_eq_band_5_range_check CHECK (((eq_band_5_range >= (-18)) AND (eq_band_5_range <= 18))),
  CONSTRAINT module_config_eq_band_5_slope_check CHECK (((eq_band_5_slope >= (0.1)::float) AND (eq_band_5_slope <= (10)::float))),
  CONSTRAINT module_config_eq_band_5_type_check CHECK (((eq_band_5_type >= 0) AND (eq_band_5_type <= 7))),
  CONSTRAINT module_config_eq_band_6_bw_check CHECK (((eq_band_6_bw >= (0.1)::float) AND (eq_band_6_bw <= (10)::float))),
  CONSTRAINT module_config_eq_band_6_freq_check CHECK (((eq_band_6_freq >= 10) AND (eq_band_6_freq <= 20000))),
  CONSTRAINT module_config_eq_band_6_range_check CHECK (((eq_band_6_range >= (-18)) AND (eq_band_6_range <= 18))),
  CONSTRAINT module_config_eq_band_6_slope_check CHECK (((eq_band_6_slope >= (0.1)::float) AND (eq_band_6_slope <= (10)::float))),
  CONSTRAINT module_config_eq_band_6_type_check CHECK (((eq_band_6_type >= 0) AND (eq_band_6_type <= 7))),
  CONSTRAINT module_config_gain_check CHECK (((gain >= ((-20))::float) AND (gain <= (20)::float))),
  CONSTRAINT module_config_lc_frequency_check CHECK (((lc_frequency >= 40) AND (lc_frequency <= 12000))),
  CONSTRAINT module_config_mod_level_check CHECK (((mod_level >= ((-140))::float) AND (mod_level <= (10)::float))),
  CONSTRAINT module_config_mod_pan_check CHECK (((mod_pan >= 0) AND (mod_pan <= 1023))),
  CONSTRAINT module_config_mono_check CHECK (((mono >= 0) AND (mono <= 3))),
  CONSTRAINT module_config_new_buss_11_12_balance_check CHECK (((buss_11_12_balance >= 0) AND (buss_11_12_balance <= 1023))),
  CONSTRAINT module_config_new_buss_11_12_level_check CHECK (((buss_11_12_level >= ((-140))::float) AND (buss_11_12_level <= (10)::float))),
  CONSTRAINT module_config_new_buss_13_14_balance_check CHECK (((buss_13_14_balance >= 0) AND (buss_13_14_balance <= 1023))),
  CONSTRAINT module_config_new_buss_13_14_level_check CHECK (((buss_13_14_level >= ((-140))::float) AND (buss_13_14_level <= (10)::float))),
  CONSTRAINT module_config_new_buss_15_16_balance_check CHECK (((buss_15_16_balance >= 0) AND (buss_15_16_balance <= 1023))),
  CONSTRAINT module_config_new_buss_15_16_level_check CHECK (((buss_15_16_level >= ((-140))::float) AND (buss_15_16_level <= (10)::float))),
  CONSTRAINT module_config_new_buss_17_18_balance_check CHECK (((buss_17_18_balance >= 0) AND (buss_17_18_balance <= 1023))),
  CONSTRAINT module_config_new_buss_17_18_level_check CHECK (((buss_17_18_level >= ((-140))::float) AND (buss_17_18_level <= (10)::float))),
  CONSTRAINT module_config_new_buss_19_20_balance_check CHECK (((buss_19_20_balance >= 0) AND (buss_19_20_balance <= 1023))),
  CONSTRAINT module_config_new_buss_19_20_level_check CHECK (((buss_19_20_level >= ((-140))::float) AND (buss_19_20_level <= (10)::float))),
  CONSTRAINT module_config_new_buss_1_2_balance_check CHECK (((buss_1_2_balance >= 0) AND (buss_1_2_balance <= 1023))),
  CONSTRAINT module_config_new_buss_1_2_level_check CHECK (((buss_1_2_level >= ((-140))::float) AND (buss_1_2_level <= (10)::float))),
  CONSTRAINT module_config_new_buss_21_22_balance_check CHECK (((buss_21_22_balance >= 0) AND (buss_21_22_balance <= 1023))),
  CONSTRAINT module_config_new_buss_21_22_level_check CHECK (((buss_21_22_level >= ((-140))::float) AND (buss_21_22_level <= (10)::float))),
  CONSTRAINT module_config_new_buss_23_24_balance_check CHECK (((buss_23_24_balance >= 0) AND (buss_23_24_balance <= 1023))),
  CONSTRAINT module_config_new_buss_23_24_level_check CHECK (((buss_23_24_level >= ((-140))::float) AND (buss_23_24_level <= (10)::float))),
  CONSTRAINT module_config_new_buss_25_26_balance_check CHECK (((buss_25_26_balance >= 0) AND (buss_25_26_balance <= 1023))),
  CONSTRAINT module_config_new_buss_25_26_level_check CHECK (((buss_25_26_level >= ((-140))::float) AND (buss_25_26_level <= (10)::float))),
  CONSTRAINT module_config_new_buss_27_28_balance_check CHECK (((buss_27_28_balance >= 0) AND (buss_27_28_balance <= 1023))),
  CONSTRAINT module_config_new_buss_27_28_level_check CHECK (((buss_27_28_level >= ((-140))::float) AND (buss_27_28_level <= (10)::float))),
  CONSTRAINT module_config_new_buss_29_30_balance_check CHECK (((buss_29_30_balance >= 0) AND (buss_29_30_balance <= 1023))),
  CONSTRAINT module_config_new_buss_29_30_level_check CHECK (((buss_29_30_level >= ((-140))::float) AND (buss_29_30_level <= (10)::float))),
  CONSTRAINT module_config_new_buss_31_32_balance_check CHECK (((buss_31_32_balance >= 0) AND (buss_31_32_balance <= 1023))),
  CONSTRAINT module_config_new_buss_31_32_level_check CHECK (((buss_31_32_level >= ((-140))::float) AND (buss_31_32_level <= (10)::float))),
  CONSTRAINT module_config_new_buss_3_4_balance_check CHECK (((buss_3_4_balance >= 0) AND (buss_3_4_balance <= 1023))),
  CONSTRAINT module_config_new_buss_3_4_level_check CHECK (((buss_3_4_level >= ((-140))::float) AND (buss_3_4_level <= (10)::float))),
  CONSTRAINT module_config_new_buss_5_6_balance_check CHECK (((buss_5_6_balance >= 0) AND (buss_5_6_balance <= 1023))),
  CONSTRAINT module_config_new_buss_5_6_level_check CHECK (((buss_5_6_level >= ((-140))::float) AND (buss_5_6_level <= (10)::float))),
  CONSTRAINT module_config_new_buss_7_8_balance_check CHECK (((buss_7_8_balance >= 0) AND (buss_7_8_balance <= 1023))),
  CONSTRAINT module_config_new_buss_7_8_level_check CHECK (((buss_7_8_level >= ((-140))::float) AND (buss_7_8_level <= (10)::float))),
  CONSTRAINT module_config_new_buss_9_10_balance_check CHECK (((buss_9_10_balance >= 0) AND (buss_9_10_balance <= 1023))),
  CONSTRAINT module_config_new_buss_9_10_level_check CHECK (((buss_9_10_level >= ((-140))::float) AND (buss_9_10_level <= (10)::float))),
  CONSTRAINT module_config_number_check CHECK (((number >= 1) AND (number <= 128))),
  CONSTRAINT module_config_phase_check CHECK (((phase >= 0) AND (phase <= 3)))
);

CREATE TABLE buss_config (
  number smallint NOT NULL PRIMARY KEY,
  label character varying(32) NOT NULL,
  pre_on boolean DEFAULT false NOT NULL,
  pre_balance boolean DEFAULT false NOT NULL,
  level float DEFAULT 0.0 NOT NULL,
  on_off boolean DEFAULT true NOT NULL,
  interlock boolean DEFAULT false NOT NULL,
  global_reset boolean DEFAULT false NOT NULL,
  exclusive smallint DEFAULT 0 NOT NULL,
  console smallint DEFAULT 1 NOT NULL,
  mono boolean DEFAULT false NOT NULL,
  CONSTRAINT buss_config_console_check CHECK (((console >= 1) AND (console <= 4))),
  CONSTRAINT buss_config_exclusive_check CHECK (((exclusive >= 0) AND (exclusive <= 3))),
  CONSTRAINT buss_config_level_check CHECK (((level >= ((-140))::float) AND (level <= (10)::float))),
  CONSTRAINT buss_config_number_check CHECK (((number >= 1) AND (number <= 16)))
);

CREATE TABLE monitor_buss_config (
  number smallint NOT NULL PRIMARY KEY,
  label character varying(32) NOT NULL,
  interlock boolean DEFAULT true NOT NULL,
  default_selection smallint DEFAULT 0 NOT NULL,
  buss_1_2 boolean DEFAULT false NOT NULL,
  buss_3_4 boolean DEFAULT false NOT NULL,
  buss_5_6 boolean DEFAULT false NOT NULL,
  buss_7_8 boolean DEFAULT false NOT NULL,
  buss_9_10 boolean DEFAULT false NOT NULL,
  buss_11_12 boolean DEFAULT false NOT NULL,
  buss_13_14 boolean DEFAULT false NOT NULL,
  buss_15_16 boolean DEFAULT false NOT NULL,
  buss_17_18 boolean DEFAULT false NOT NULL,
  buss_19_20 boolean DEFAULT false NOT NULL,
  buss_21_22 boolean DEFAULT false NOT NULL,
  buss_23_24 boolean DEFAULT false NOT NULL,
  buss_25_26 boolean DEFAULT false NOT NULL,
  buss_27_28 boolean DEFAULT false NOT NULL,
  buss_29_30 boolean DEFAULT false NOT NULL,
  buss_31_32 boolean DEFAULT false NOT NULL,
  dim_level float DEFAULT (-20.0) NOT NULL,
  console smallint DEFAULT 1 NOT NULL,
  CONSTRAINT monitor_buss_config_console_check CHECK (((console >= 1) AND (console <= 4))),
  CONSTRAINT monitor_buss_config_dim_level_check CHECK (((dim_level >= ((-140))::float) AND (dim_level <= (0)::float))),
  CONSTRAINT monitor_buss_config_number_check CHECK (((number >= 1) AND (number <= 16)))
);

CREATE TABLE extern_src_config (
  number smallint NOT NULL PRIMARY KEY,
  ext1 smallint DEFAULT 0 NOT NULL,
  ext2 smallint DEFAULT 0 NOT NULL,
  ext3 smallint DEFAULT 0 NOT NULL,
  ext4 smallint DEFAULT 0 NOT NULL,
  ext5 smallint DEFAULT 0 NOT NULL,
  ext6 smallint DEFAULT 0 NOT NULL,
  ext7 smallint DEFAULT 0 NOT NULL,
  ext8 smallint DEFAULT 0 NOT NULL,
  safe1 boolean DEFAULT true NOT NULL,
  safe2 boolean DEFAULT true NOT NULL,
  safe3 boolean DEFAULT true NOT NULL,
  safe4 boolean DEFAULT true NOT NULL,
  safe5 boolean DEFAULT true NOT NULL,
  safe6 boolean DEFAULT true NOT NULL,
  safe7 boolean DEFAULT true NOT NULL,
  safe8 boolean DEFAULT true NOT NULL,
  CONSTRAINT extern_src_config_number_check CHECK (((number >= 1) AND (number <= 4)))
);

CREATE TABLE talkback_config (
  number smallint NOT NULL PRIMARY KEY,
  source smallint DEFAULT 0 NOT NULL,
  CONSTRAINT talkback_config_number_check CHECK (((number >= 1) AND (number <= 16)))
);

CREATE TABLE global_config (
  samplerate integer NOT NULL,
  headroom float NOT NULL,
  level_reserve float NOT NULL,
  auto_momentary boolean DEFAULT true NOT NULL,
  startup_state boolean DEFAULT false NOT NULL,
  date_time character varying(19) DEFAULT '0000-00-00 00:00:00'::character varying NOT NULL,
  ext_clock_addr integer
);

CREATE TABLE dest_config (
  number smallint NOT NULL,
  label character varying(32) NOT NULL PRIMARY KEY,
  output1_addr integer,
  output1_sub_ch smallint NOT NULL,
  output2_addr integer,
  output2_sub_ch smallint NOT NULL,
  level float DEFAULT 0 NOT NULL,
  source integer DEFAULT 0 NOT NULL,
  mix_minus_source integer DEFAULT 0 NOT NULL,
  pos smallint DEFAULT 9999 NOT NULL,
  routing smallint DEFAULT 0 NOT NULL,
  CONSTRAINT dest_config_number_check CHECK (((number >= 1) AND (number <= 1280))),
  CONSTRAINT dest_config_output1_sub_ch_check CHECK (((output1_sub_ch >= 0) AND (output1_sub_ch < 32))),
  CONSTRAINT dest_config_output2_sub_ch_check CHECK (((output2_sub_ch >= 0) AND (output2_sub_ch < 32))),
  CONSTRAINT dest_config_routing_check CHECK (((routing >= 0) AND (routing <= 3)))
);

CREATE TABLE db_to_position (
  db float NOT NULL PRIMARY KEY,
  position smallint,
  CONSTRAINT db_to_position_db_check CHECK (((db >= ((-140.0))::float) AND (db < (10.0)::float))),
  CONSTRAINT db_to_position_position_check CHECK ((("position" >= 0) AND ("position" < 1024)))
);

CREATE TABLE predefined_node_config (
  man_id smallint NOT NULL,
  prod_id smallint NOT NULL,
  firm_major smallint NOT NULL,
  cfg_name character varying(32) NOT NULL,
  object integer NOT NULL,
  func function_number NOT NULL,
  label character varying(16),
  user_level0 boolean,
  user_level1 boolean,
  user_level2 boolean,
  user_level3 boolean,
  user_level4 boolean,
  user_level5 boolean
  PRIMARY KEY (man_id, prod_id, firm_major, cfg_name, object);
);

CREATE TABLE predefined_node_defaults (
  man_id smallint NOT NULL,
  prod_id smallint NOT NULL,
  firm_major smallint NOT NULL,
  cfg_name character varying(32) NOT NULL,
  object integer NOT NULL,
  data mambanet_data NOT NULL
  PRIMARY KEY (man_id, prod_id, firm_major, cfg_name, object);
);

CREATE TABLE src_preset (
  pos smallint DEFAULT 9999 NOT NULL,
  number smallint NOT NULL PRIMARY KEY,
  label character varying(32) DEFAULT 'preset'::character varying NOT NULL,
  use_gain_preset boolean DEFAULT false NOT NULL,
  gain float DEFAULT 0 NOT NULL,
  use_lc_preset boolean DEFAULT false NOT NULL,
  lc_on_off boolean DEFAULT false NOT NULL,
  lc_frequency smallint DEFAULT 80 NOT NULL,
  use_insert_preset boolean DEFAULT false NOT NULL,
  insert_on_off boolean DEFAULT false NOT NULL,
  use_phase_preset boolean DEFAULT false NOT NULL,
  phase_on_off boolean DEFAULT false NOT NULL,
  phase smallint DEFAULT 3 NOT NULL,
  use_mono_preset boolean DEFAULT false NOT NULL,
  mono_on_off boolean DEFAULT false NOT NULL,
  mono smallint DEFAULT 3 NOT NULL,
  use_eq_preset boolean DEFAULT false NOT NULL,
  eq_on_off boolean DEFAULT false NOT NULL,
  eq_band_1_range smallint DEFAULT 18 NOT NULL,
  eq_band_1_level float DEFAULT 0 NOT NULL,
  eq_band_1_freq smallint DEFAULT 7000 NOT NULL,
  eq_band_1_bw float DEFAULT 1 NOT NULL,
  eq_band_1_slope float DEFAULT 1 NOT NULL,
  eq_band_1_type smallint DEFAULT 4 NOT NULL,
  eq_band_2_range smallint DEFAULT 18 NOT NULL,
  eq_band_2_level float DEFAULT 0 NOT NULL,
  eq_band_2_freq smallint DEFAULT 3000 NOT NULL,
  eq_band_2_bw float DEFAULT 2 NOT NULL,
  eq_band_2_slope float DEFAULT 1 NOT NULL,
  eq_band_2_type smallint DEFAULT 3 NOT NULL,
  eq_band_3_range smallint DEFAULT 18 NOT NULL,
  eq_band_3_level float DEFAULT 0 NOT NULL,
  eq_band_3_freq smallint DEFAULT 1000 NOT NULL,
  eq_band_3_bw float DEFAULT 2 NOT NULL,
  eq_band_3_slope float DEFAULT 1 NOT NULL,
  eq_band_3_type smallint DEFAULT 3 NOT NULL,
  eq_band_4_range smallint DEFAULT 18 NOT NULL,
  eq_band_4_level float DEFAULT 0 NOT NULL,
  eq_band_4_freq smallint DEFAULT 300 NOT NULL,
  eq_band_4_bw float DEFAULT 1 NOT NULL,
  eq_band_4_slope float DEFAULT 1 NOT NULL,
  eq_band_4_type smallint DEFAULT 2 NOT NULL,
  eq_band_5_range smallint DEFAULT 18 NOT NULL,
  eq_band_5_level float DEFAULT 0 NOT NULL,
  eq_band_5_freq smallint DEFAULT 12000 NOT NULL,
  eq_band_5_bw float DEFAULT 1 NOT NULL,
  eq_band_5_slope float DEFAULT 1 NOT NULL,
  eq_band_5_type smallint DEFAULT 0 NOT NULL,
  eq_band_6_range smallint DEFAULT 18 NOT NULL,
  eq_band_6_level float DEFAULT 0 NOT NULL,
  eq_band_6_freq smallint DEFAULT 120 NOT NULL,
  eq_band_6_bw float DEFAULT 1 NOT NULL,
  eq_band_6_slope float DEFAULT 1 NOT NULL,
  eq_band_6_type smallint DEFAULT 0 NOT NULL,
  use_dyn_preset boolean DEFAULT false NOT NULL,
  dyn_on_off boolean DEFAULT false NOT NULL,
  d_exp_threshold float DEFAULT (-30) NOT NULL,
  agc_threshold float DEFAULT (-20) NOT NULL,
  use_mod_preset boolean DEFAULT false NOT NULL,
  mod_pan smallint DEFAULT 512 NOT NULL,
  mod_on_off boolean DEFAULT false NOT NULL,
  mod_lvl float DEFAULT (-140) NOT NULL,
  routing_preset smallint DEFAULT 1 NOT NULL,
  pool1 boolean DEFAULT true NOT NULL,
  pool2 boolean DEFAULT true NOT NULL,
  pool3 boolean DEFAULT true NOT NULL,
  pool4 boolean DEFAULT true NOT NULL,
  pool5 boolean DEFAULT true NOT NULL,
  pool6 boolean DEFAULT true NOT NULL,
  pool7 boolean DEFAULT true NOT NULL,
  pool8 boolean DEFAULT true NOT NULL,
  agc_ratio float DEFAULT 1,
  CONSTRAINT src_preset_agc_ratio_check CHECK (((agc_ratio >= (1)::float) AND (agc_ratio <= (25)::float))),
  CONSTRAINT src_preset_agc_threshold_check CHECK (((agc_threshold >= ((-30))::float) AND (agc_threshold < (0)::float))),
  CONSTRAINT src_preset_check CHECK (((eq_band_1_level >= ((- eq_band_1_range))::float) AND (eq_band_1_level <= (eq_band_1_range)::float))),
  CONSTRAINT src_preset_check1 CHECK (((eq_band_2_level >= ((- eq_band_2_range))::float) AND (eq_band_2_level <= (eq_band_2_range)::float))),
  CONSTRAINT src_preset_check2 CHECK (((eq_band_3_level >= ((- eq_band_3_range))::float) AND (eq_band_3_level <= (eq_band_3_range)::float))),
  CONSTRAINT src_preset_check3 CHECK (((eq_band_4_level >= ((- eq_band_4_range))::float) AND (eq_band_4_level <= (eq_band_4_range)::float))),
  CONSTRAINT src_preset_check4 CHECK (((eq_band_5_level >= ((- eq_band_5_range))::float) AND (eq_band_5_level <= (eq_band_5_range)::float))),
  CONSTRAINT src_preset_check5 CHECK (((eq_band_6_level >= ((- eq_band_6_range))::float) AND (eq_band_6_level <= (eq_band_6_range)::float))),
  CONSTRAINT src_preset_d_exp_threshold_check CHECK (((d_exp_threshold >= ((-50))::float) AND (d_exp_threshold <= (0)::float))),
  CONSTRAINT src_preset_eq_band_1_bw_check CHECK (((eq_band_1_bw >= (0.1)::float) AND (eq_band_1_bw <= (10)::float))),
  CONSTRAINT src_preset_eq_band_1_freq_check CHECK (((eq_band_1_freq >= 10) AND (eq_band_1_freq <= 20000))),
  CONSTRAINT src_preset_eq_band_1_range_check CHECK (((eq_band_1_range >= 0) AND (eq_band_1_range <= 18))),
  CONSTRAINT src_preset_eq_band_1_slope_check CHECK (((eq_band_1_slope >= (0.1)::float) AND (eq_band_1_slope <= (10)::float))),
  CONSTRAINT src_preset_eq_band_1_type_check CHECK (((eq_band_1_type >= 0) AND (eq_band_1_type <= 7))),
  CONSTRAINT src_preset_eq_band_2_bw_check CHECK (((eq_band_2_bw >= (0.1)::float) AND (eq_band_2_bw <= (10)::float))),
  CONSTRAINT src_preset_eq_band_2_freq_check CHECK (((eq_band_2_freq >= 10) AND (eq_band_2_freq <= 20000))),
  CONSTRAINT src_preset_eq_band_2_range_check CHECK (((eq_band_2_range >= 0) AND (eq_band_2_range <= 18))),
  CONSTRAINT src_preset_eq_band_2_slope_check CHECK (((eq_band_2_slope >= (0.1)::float) AND (eq_band_2_slope <= (10)::float))),
  CONSTRAINT src_preset_eq_band_2_type_check CHECK (((eq_band_2_type >= 0) AND (eq_band_2_type <= 7))),
  CONSTRAINT src_preset_eq_band_3_bw_check CHECK (((eq_band_3_bw >= (0.1)::float) AND (eq_band_3_bw <= (10)::float))),
  CONSTRAINT src_preset_eq_band_3_freq_check CHECK (((eq_band_3_freq >= 10) AND (eq_band_3_freq <= 20000))),
  CONSTRAINT src_preset_eq_band_3_range_check CHECK (((eq_band_3_range >= 0) AND (eq_band_3_range <= 18))),
  CONSTRAINT src_preset_eq_band_3_slope_check CHECK (((eq_band_3_slope >= (0.1)::float) AND (eq_band_3_slope <= (10)::float))),
  CONSTRAINT src_preset_eq_band_3_type_check CHECK (((eq_band_3_type >= 0) AND (eq_band_3_type <= 7))),
  CONSTRAINT src_preset_eq_band_4_bw_check CHECK (((eq_band_4_bw >= (0.1)::float) AND (eq_band_4_bw <= (10)::float))),
  CONSTRAINT src_preset_eq_band_4_freq_check CHECK (((eq_band_4_freq >= 10) AND (eq_band_4_freq <= 20000))),
  CONSTRAINT src_preset_eq_band_4_range_check CHECK (((eq_band_4_range >= 0) AND (eq_band_4_range <= 18))),
  CONSTRAINT src_preset_eq_band_4_slope_check CHECK (((eq_band_4_slope >= (0.1)::float) AND (eq_band_4_slope <= (10)::float))),
  CONSTRAINT src_preset_eq_band_4_type_check CHECK (((eq_band_4_type >= 0) AND (eq_band_4_type <= 7))),
  CONSTRAINT src_preset_eq_band_5_bw_check CHECK (((eq_band_5_bw >= (0.1)::float) AND (eq_band_5_bw <= (10)::float))),
  CONSTRAINT src_preset_eq_band_5_freq_check CHECK (((eq_band_5_freq >= 10) AND (eq_band_5_freq <= 20000))),
  CONSTRAINT src_preset_eq_band_5_range_check CHECK (((eq_band_5_range >= 0) AND (eq_band_5_range <= 18))),
  CONSTRAINT src_preset_eq_band_5_slope_check CHECK (((eq_band_5_slope >= (0.1)::float) AND (eq_band_5_slope <= (10)::float))),
  CONSTRAINT src_preset_eq_band_5_type_check CHECK (((eq_band_5_type >= 0) AND (eq_band_5_type <= 7))),
  CONSTRAINT src_preset_eq_band_6_bw_check CHECK (((eq_band_6_bw >= (0.1)::float) AND (eq_band_6_bw <= (10)::float))),
  CONSTRAINT src_preset_eq_band_6_freq_check CHECK (((eq_band_6_freq >= 10) AND (eq_band_6_freq <= 20000))),
  CONSTRAINT src_preset_eq_band_6_range_check CHECK (((eq_band_6_range >= 0) AND (eq_band_6_range <= 18))),
  CONSTRAINT src_preset_eq_band_6_slope_check CHECK (((eq_band_6_slope >= (0.1)::float) AND (eq_band_6_slope <= (10)::float))),
  CONSTRAINT src_preset_eq_band_6_type_check CHECK (((eq_band_6_type >= 0) AND (eq_band_6_type <= 7))),
  CONSTRAINT src_preset_gain_check CHECK (((gain >= ((-20))::float) AND (gain <= (20)::float))),
  CONSTRAINT src_preset_lc_frequency_check CHECK (((lc_frequency >= 40) AND (lc_frequency <= 12000))),
  CONSTRAINT src_preset_mod_lvl_check CHECK (((mod_lvl >= ((-140))::float) AND (mod_lvl <= (10)::float))),
  CONSTRAINT src_preset_mod_pan_check CHECK (((mod_pan >= 0) AND (mod_pan <= 1023))),
  CONSTRAINT src_preset_mono_check CHECK (((mono >= 0) AND (mono <= 3))),
  CONSTRAINT src_preset_number_check CHECK (((number >= 1) AND (number <= 1280))),
  CONSTRAINT src_preset_phase_check CHECK (((phase >= 0) AND (phase <= 3))),
  CONSTRAINT src_preset_routing_preset_check CHECK (((routing_preset >= 1) AND (routing_preset <= 8)))
);

CREATE TABLE routing_preset (
  mod_number smallint NOT NULL,
  mod_preset character varying(1) NOT NULL,
  buss_1_2_use_preset boolean DEFAULT false NOT NULL,
  buss_1_2_level float DEFAULT 0 NOT NULL,
  buss_1_2_on_off boolean DEFAULT true NOT NULL,
  buss_1_2_pre_post boolean DEFAULT false NOT NULL,
  buss_1_2_balance smallint DEFAULT 512 NOT NULL,
  buss_3_4_use_preset boolean DEFAULT false NOT NULL,
  buss_3_4_level float DEFAULT 0 NOT NULL,
  buss_3_4_on_off boolean DEFAULT true NOT NULL,
  buss_3_4_pre_post boolean DEFAULT false NOT NULL,
  buss_3_4_balance smallint DEFAULT 512 NOT NULL,
  buss_5_6_use_preset boolean DEFAULT false NOT NULL,
  buss_5_6_level float DEFAULT 0 NOT NULL,
  buss_5_6_on_off boolean DEFAULT true NOT NULL,
  buss_5_6_pre_post boolean DEFAULT false NOT NULL,
  buss_5_6_balance smallint DEFAULT 512 NOT NULL,
  buss_7_8_use_preset boolean DEFAULT false NOT NULL,
  buss_7_8_level float DEFAULT 0 NOT NULL,
  buss_7_8_on_off boolean DEFAULT true NOT NULL,
  buss_7_8_pre_post boolean DEFAULT false NOT NULL,
  buss_7_8_balance smallint DEFAULT 512 NOT NULL,
  buss_9_10_use_preset boolean DEFAULT false NOT NULL,
  buss_9_10_level float DEFAULT 0 NOT NULL,
  buss_9_10_on_off boolean DEFAULT true NOT NULL,
  buss_9_10_pre_post boolean DEFAULT false NOT NULL,
  buss_9_10_balance smallint DEFAULT 512 NOT NULL,
  buss_11_12_use_preset boolean DEFAULT false NOT NULL,
  buss_11_12_level float DEFAULT 0 NOT NULL,
  buss_11_12_on_off boolean DEFAULT true NOT NULL,
  buss_11_12_pre_post boolean DEFAULT false NOT NULL,
  buss_11_12_balance smallint DEFAULT 512 NOT NULL,
  buss_13_14_use_preset boolean DEFAULT false NOT NULL,
  buss_13_14_level float DEFAULT 0 NOT NULL,
  buss_13_14_on_off boolean DEFAULT true NOT NULL,
  buss_13_14_pre_post boolean DEFAULT false NOT NULL,
  buss_13_14_balance smallint DEFAULT 512 NOT NULL,
  buss_15_16_use_preset boolean DEFAULT false NOT NULL,
  buss_15_16_level float DEFAULT 0 NOT NULL,
  buss_15_16_on_off boolean DEFAULT true NOT NULL,
  buss_15_16_pre_post boolean DEFAULT false NOT NULL,
  buss_15_16_balance smallint DEFAULT 512 NOT NULL,
  buss_17_18_use_preset boolean DEFAULT false NOT NULL,
  buss_17_18_level float DEFAULT 0 NOT NULL,
  buss_17_18_on_off boolean DEFAULT true NOT NULL,
  buss_17_18_pre_post boolean DEFAULT false NOT NULL,
  buss_17_18_balance smallint DEFAULT 512 NOT NULL,
  buss_19_20_use_preset boolean DEFAULT false NOT NULL,
  buss_19_20_level float DEFAULT 0 NOT NULL,
  buss_19_20_on_off boolean DEFAULT true NOT NULL,
  buss_19_20_pre_post boolean DEFAULT false NOT NULL,
  buss_19_20_balance smallint DEFAULT 512 NOT NULL,
  buss_21_22_use_preset boolean DEFAULT false NOT NULL,
  buss_21_22_level float DEFAULT 0 NOT NULL,
  buss_21_22_on_off boolean DEFAULT true NOT NULL,
  buss_21_22_pre_post boolean DEFAULT false NOT NULL,
  buss_21_22_balance smallint DEFAULT 512 NOT NULL,
  buss_23_24_use_preset boolean DEFAULT false NOT NULL,
  buss_23_24_level float DEFAULT 0 NOT NULL,
  buss_23_24_on_off boolean DEFAULT true NOT NULL,
  buss_23_24_pre_post boolean DEFAULT false NOT NULL,
  buss_23_24_balance smallint DEFAULT 512 NOT NULL,
  buss_25_26_use_preset boolean DEFAULT false NOT NULL,
  buss_25_26_level float DEFAULT 0 NOT NULL,
  buss_25_26_on_off boolean DEFAULT true NOT NULL,
  buss_25_26_pre_post boolean DEFAULT false NOT NULL,
  buss_25_26_balance smallint DEFAULT 512 NOT NULL,
  buss_27_28_use_preset boolean DEFAULT false NOT NULL,
  buss_27_28_level float DEFAULT 0 NOT NULL,
  buss_27_28_on_off boolean DEFAULT true NOT NULL,
  buss_27_28_pre_post boolean DEFAULT false NOT NULL,
  buss_27_28_balance smallint DEFAULT 512 NOT NULL,
  buss_29_30_use_preset boolean DEFAULT false NOT NULL,
  buss_29_30_level float DEFAULT 0 NOT NULL,
  buss_29_30_on_off boolean DEFAULT true NOT NULL,
  buss_29_30_pre_post boolean DEFAULT false NOT NULL,
  buss_29_30_balance smallint DEFAULT 512 NOT NULL,
  buss_31_32_use_preset boolean DEFAULT false NOT NULL,
  buss_31_32_level float DEFAULT 0 NOT NULL,
  buss_31_32_on_off boolean DEFAULT true NOT NULL,
  buss_31_32_pre_post boolean DEFAULT false NOT NULL,
  buss_31_32_balance smallint DEFAULT 512 NOT NULL,
  CONSTRAINT routing_preset_buss_11_12_balance_check CHECK (((buss_11_12_balance >= 0) AND (buss_11_12_balance <= 1023))),
  CONSTRAINT routing_preset_buss_11_12_level_check CHECK (((buss_11_12_level >= ((-140))::float) AND (buss_11_12_level <= (10)::float))),
  CONSTRAINT routing_preset_buss_13_14_balance_check CHECK (((buss_13_14_balance >= 0) AND (buss_13_14_balance <= 1023))),
  CONSTRAINT routing_preset_buss_13_14_level_check CHECK (((buss_13_14_level >= ((-140))::float) AND (buss_13_14_level <= (10)::float))),
  CONSTRAINT routing_preset_buss_15_16_balance_check CHECK (((buss_15_16_balance >= 0) AND (buss_15_16_balance <= 1023))),
  CONSTRAINT routing_preset_buss_15_16_level_check CHECK (((buss_15_16_level >= ((-140))::float) AND (buss_15_16_level <= (10)::float))),
  CONSTRAINT routing_preset_buss_17_18_balance_check CHECK (((buss_17_18_balance >= 0) AND (buss_17_18_balance <= 1023))),
  CONSTRAINT routing_preset_buss_17_18_level_check CHECK (((buss_17_18_level >= ((-140))::float) AND (buss_17_18_level <= (10)::float))),
  CONSTRAINT routing_preset_buss_19_20_balance_check CHECK (((buss_19_20_balance >= 0) AND (buss_19_20_balance <= 1023))),
  CONSTRAINT routing_preset_buss_19_20_level_check CHECK (((buss_19_20_level >= ((-140))::float) AND (buss_19_20_level <= (10)::float))),
  CONSTRAINT routing_preset_buss_1_2_balance_check CHECK (((buss_1_2_balance >= 0) AND (buss_1_2_balance <= 1023))),
  CONSTRAINT routing_preset_buss_1_2_level_check CHECK (((buss_1_2_level >= ((-140))::float) AND (buss_1_2_level <= (10)::float))),
  CONSTRAINT routing_preset_buss_21_22_balance_check CHECK (((buss_21_22_balance >= 0) AND (buss_21_22_balance <= 1023))),
  CONSTRAINT routing_preset_buss_21_22_level_check CHECK (((buss_21_22_level >= ((-140))::float) AND (buss_21_22_level <= (10)::float))),
  CONSTRAINT routing_preset_buss_23_24_balance_check CHECK (((buss_23_24_balance >= 0) AND (buss_23_24_balance <= 1023))),
  CONSTRAINT routing_preset_buss_23_24_level_check CHECK (((buss_23_24_level >= ((-140))::float) AND (buss_23_24_level <= (10)::float))),
  CONSTRAINT routing_preset_buss_25_26_balance_check CHECK (((buss_25_26_balance >= 0) AND (buss_25_26_balance <= 1023))),
  CONSTRAINT routing_preset_buss_25_26_level_check CHECK (((buss_25_26_level >= ((-140))::float) AND (buss_25_26_level <= (10)::float))),
  CONSTRAINT routing_preset_buss_27_28_balance_check CHECK (((buss_27_28_balance >= 0) AND (buss_27_28_balance <= 1023))),
  CONSTRAINT routing_preset_buss_27_28_level_check CHECK (((buss_27_28_level >= ((-140))::float) AND (buss_27_28_level <= (10)::float))),
  CONSTRAINT routing_preset_buss_29_30_balance_check CHECK (((buss_29_30_balance >= 0) AND (buss_29_30_balance <= 1023))),
  CONSTRAINT routing_preset_buss_29_30_level_check CHECK (((buss_29_30_level >= ((-140))::float) AND (buss_29_30_level <= (10)::float))),
  CONSTRAINT routing_preset_buss_31_32_balance_check CHECK (((buss_31_32_balance >= 0) AND (buss_31_32_balance <= 1023))),
  CONSTRAINT routing_preset_buss_31_32_level_check CHECK (((buss_31_32_level >= ((-140))::float) AND (buss_31_32_level <= (10)::float))),
  CONSTRAINT routing_preset_buss_3_4_balance_check CHECK (((buss_3_4_balance >= 0) AND (buss_3_4_balance <= 1023))),
  CONSTRAINT routing_preset_buss_3_4_level_check CHECK (((buss_3_4_level >= ((-140))::float) AND (buss_3_4_level <= (10)::float))),
  CONSTRAINT routing_preset_buss_5_6_balance_check CHECK (((buss_5_6_balance >= 0) AND (buss_5_6_balance <= 1023))),
  CONSTRAINT routing_preset_buss_5_6_level_check CHECK (((buss_5_6_level >= ((-140))::float) AND (buss_5_6_level <= (10)::float))),
  CONSTRAINT routing_preset_buss_7_8_balance_check CHECK (((buss_7_8_balance >= 0) AND (buss_7_8_balance <= 1023))),
  CONSTRAINT routing_preset_buss_7_8_level_check CHECK (((buss_7_8_level >= ((-140))::float) AND (buss_7_8_level <= (10)::float))),
  CONSTRAINT routing_preset_buss_9_10_balance_check CHECK (((buss_9_10_balance >= 0) AND (buss_9_10_balance <= 1023))),
  CONSTRAINT routing_preset_buss_9_10_level_check CHECK (((buss_9_10_level >= ((-140))::float) AND (buss_9_10_level <= (10)::float))),
  CONSTRAINT routing_preset_mod_number_check CHECK (((mod_number >= 1) AND (mod_number <= 128))),
  CONSTRAINT routing_preset_mod_preset_check CHECK ((((mod_preset)::text >= 'A'::text) AND ((mod_preset)::text <= 'H'::text)))
  PRIMARY KEY (mod_number, mod_preset);
);

CREATE TABLE buss_preset (
  pos smallint DEFAULT 9999 NOT NULL,
  number smallint NOT NULL PRIMARY KEY,
  label character varying(32) NOT NULL,
  CONSTRAINT buss_preset_number_check CHECK (((number >= 1) AND (number <= 1280)))
);

CREATE TABLE buss_preset_rows (
  number smallint NOT NULL,
  buss smallint NOT NULL,
  use_preset boolean DEFAULT false NOT NULL,
  level float DEFAULT 0.0 NOT NULL,
  on_off boolean DEFAULT true NOT NULL,
  CONSTRAINT buss_preset_rows_buss_check CHECK (((buss >= 1) AND (buss <= 16))),
  CONSTRAINT buss_preset_rows_number_check CHECK (((number >= 1) AND (number <= 1280)))
  PRIMARY KEY (number, buss);
);

CREATE TABLE monitor_buss_preset_rows (
  number smallint NOT NULL,
  monitor_buss smallint NOT NULL,
  use_preset boolean[] DEFAULT ARRAY[false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false] NOT NULL,
  on_off boolean[] DEFAULT ARRAY[false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false] NOT NULL,
  CONSTRAINT monitor_buss_preset_rows_monitor_buss_check CHECK (((monitor_buss >= 1) AND (monitor_buss <= 16))),
  CONSTRAINT monitor_buss_preset_rows_number_check CHECK (((number >= 1) AND (number <= 1280)))
  PRIMARY KEY (number, monitor_buss);
);

CREATE TABLE console_preset (
  pos smallint DEFAULT 9999 NOT NULL,
  number smallint NOT NULL PRIMARY KEY,
  label character varying(32) DEFAULT 'Preset'::character varying NOT NULL,
  console1 boolean DEFAULT false NOT NULL,
  console2 boolean DEFAULT false NOT NULL,
  console3 boolean DEFAULT false NOT NULL,
  console4 boolean DEFAULT false NOT NULL,
  mod_preset character varying(1) DEFAULT 'A'::character varying,
  buss_preset smallint,
  safe_recall_time float DEFAULT 1 NOT NULL,
  forced_recall_time float DEFAULT 3 NOT NULL,
  CONSTRAINT console_preset_check CHECK (((safe_recall_time >= (0)::float) AND (safe_recall_time <= forced_recall_time))),
  CONSTRAINT console_preset_check1 CHECK (((forced_recall_time >= safe_recall_time) AND (forced_recall_time <= (10)::float))),
  CONSTRAINT console_preset_mod_preset_check CHECK ((((mod_preset)::text >= 'A'::text) AND ((mod_preset)::text <= 'H'::text))),
  CONSTRAINT console_preset_number_check CHECK (((number >= 1) AND (number <= 32))),
  CONSTRAINT console_preset_number_check1 CHECK (((number >= 1) AND (number <= 1280)))
);

CREATE TABLE users (
  pos smallint DEFAULT 9999 NOT NULL,
  number smallint NOT NULL PRIMARY KEY,
  username character varying(32) DEFAULT 'New user'::character varying NOT NULL,
  password character varying(16) DEFAULT 'service'::character varying NOT NULL,
  console1_user_level smallint DEFAULT 2 NOT NULL,
  console2_user_level smallint DEFAULT 2 NOT NULL,
  console3_user_level smallint DEFAULT 2 NOT NULL,
  console4_user_level smallint DEFAULT 2 NOT NULL,
  console1_preset smallint,
  console2_preset smallint,
  console3_preset smallint,
  console4_preset smallint,
  console1_sourcepool smallint DEFAULT 2 NOT NULL,
  console2_sourcepool smallint DEFAULT 2 NOT NULL,
  console3_sourcepool smallint DEFAULT 2 NOT NULL,
  console4_sourcepool smallint DEFAULT 2 NOT NULL,
  console1_presetpool smallint DEFAULT 2 NOT NULL,
  console2_presetpool smallint DEFAULT 2 NOT NULL,
  console3_presetpool smallint DEFAULT 2 NOT NULL,
  console4_presetpool smallint DEFAULT 2 NOT NULL,
  console1_preset_load boolean DEFAULT false NOT NULL,
  console2_preset_load boolean DEFAULT false NOT NULL,
  console3_preset_load boolean DEFAULT false NOT NULL,
  console4_preset_load boolean DEFAULT false NOT NULL,
  logout_to_idle boolean DEFAULT true NOT NULL,
  active boolean DEFAULT true NOT NULL,
  CONSTRAINT users_console1_presetpool_check CHECK (((console1_presetpool >= 0) AND (console1_presetpool <= 2))),
  CONSTRAINT users_console1_sourcepool_check CHECK (((console1_sourcepool >= 0) AND (console1_sourcepool <= 2))),
  CONSTRAINT users_console1_user_level_check CHECK (((console1_user_level >= 2) AND (console1_user_level <= 6))),
  CONSTRAINT users_console2_presetpool_check CHECK (((console2_presetpool >= 0) AND (console2_presetpool <= 2))),
  CONSTRAINT users_console2_sourcepool_check CHECK (((console2_sourcepool >= 0) AND (console2_sourcepool <= 2))),
  CONSTRAINT users_console2_user_level_check CHECK (((console2_user_level >= 2) AND (console2_user_level <= 6))),
  CONSTRAINT users_console3_presetpool_check CHECK (((console3_presetpool >= 0) AND (console3_presetpool <= 2))),
  CONSTRAINT users_console3_sourcepool_check CHECK (((console3_sourcepool >= 0) AND (console3_sourcepool <= 2))),
  CONSTRAINT users_console3_user_level_check CHECK (((console3_user_level >= 2) AND (console3_user_level <= 6))),
  CONSTRAINT users_console4_presetpool_check CHECK (((console4_presetpool >= 0) AND (console4_presetpool <= 2))),
  CONSTRAINT users_console4_sourcepool_check CHECK (((console4_sourcepool >= 0) AND (console4_sourcepool <= 2))),
  CONSTRAINT users_console4_user_level_check CHECK (((console4_user_level >= 2) AND (console4_user_level <= 6))),
  CONSTRAINT users_number_check CHECK (((number >= 1) AND (number <= 2000)))
);

CREATE TABLE console_config (
  number smallint NOT NULL PRIMARY KEY,
  name character varying(64),
  location character varying(64),
  contact character varying(64),
  username character varying(32) DEFAULT ''::character varying NOT NULL,
  password character varying(16) DEFAULT ''::character varying NOT NULL,
  chipcard_username character varying(32) DEFAULT ''::character varying NOT NULL,
  chipcard_password character varying(16) DEFAULT ''::character varying NOT NULL,
  program_end_time character varying(8) DEFAULT '00:00:00'::character varying NOT NULL,
  program_end_time_enable boolean DEFAULT false NOT NULL,
  CONSTRAINT console_config_number_check CHECK (((number >= 1) AND (number <= 4)))
);

CREATE TABLE src_pool (
  number smallint NOT NULL PRIMARY KEY,
  pool1 boolean DEFAULT false NOT NULL,
  pool2 boolean DEFAULT false NOT NULL,
  pool3 boolean DEFAULT false NOT NULL,
  pool4 boolean DEFAULT false NOT NULL,
  pool5 boolean DEFAULT false NOT NULL,
  pool6 boolean DEFAULT false NOT NULL,
  pool7 boolean DEFAULT false NOT NULL,
  pool8 boolean DEFAULT false NOT NULL
);

CREATE TABLE preset_pool (
  number smallint NOT NULL PRIMARY KEY,
  pool1 boolean DEFAULT false NOT NULL,
  pool2 boolean DEFAULT false NOT NULL,
  pool3 boolean DEFAULT false NOT NULL,
  pool4 boolean DEFAULT false NOT NULL,
  pool5 boolean DEFAULT false NOT NULL,
  pool6 boolean DEFAULT false NOT NULL,
  pool7 boolean DEFAULT false NOT NULL,
  pool8 boolean DEFAULT false NOT NULL
);


-- F O R E I G N   K E Y S

ALTER TABLE node_config               ADD FOREIGN KEY (addr)               REFERENCES addresses (addr)        ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE defaults                  ADD FOREIGN KEY (addr)               REFERENCES addresses (addr)        ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE slot_config               ADD FOREIGN KEY (addr)               REFERENCES addresses (addr)        ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE src_config                ADD FOREIGN KEY (input1_addr)        REFERENCES addresses (addr)        ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE src_config                ADD FOREIGN KEY (input2_addr)        REFERENCES addresses (addr)        ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE src_config                ADD FOREIGN KEY (related_dest)       REFERENCES dest_config (number)    ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE dest_config               ADD FOREIGN KEY (output1_addr)       REFERENCES addresses (addr)        ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE dest_config               ADD FOREIGN KEY (output2_addr)       REFERENCES addresses (addr)        ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE buss_preset_rows          ADD FOREIGN KEY (number)             REFERENCES buss_preset (number)    ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE monitor_buss_preset_rows  ADD FOREIGN KEY (number)             REFERENCES buss_preset (number)    ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE users                     ADD FOREIGN KEY (console1_preset)    REFERENCES console_preset (number) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE users                     ADD FOREIGN KEY (console2_preset)    REFERENCES console_preset (number) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE users                     ADD FOREIGN KEY (console3_preset)    REFERENCES console_preset (number) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE users                     ADD FOREIGN KEY (console4_preset)    REFERENCES console_preset (number) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE global_config             ADD FOREIGN KEY (ext_clock_addr)     REFERENCES addresses (addr)        ON DELETE CASCADE ON UPDATE CASCADE;


